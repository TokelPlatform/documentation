(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{404:function(t,e,a){"use strict";a.r(e);var s=a(27),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[t._v("Tokel is a completely independent blockchain created using Komodo smart chain technologies. In order to run the Tokel blockchain, you must build the Tokel daemon and launch the Tokel blockchain through that. You do "),a("strong",[t._v("not")]),t._v(" have to run the Komodo blockchain in order to run or use the Tokel blockchain.")]),t._v(" "),a("p",[t._v("You must ensure you are running the chain from the "),a("code",[t._v("tokel")]),t._v(" "),a("a",{attrs:{href:"https://github.com/TokelPlatform/tokel/tree/tokel",target:"_blank",rel:"noopener noreferrer"}},[t._v("branch of this repository"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"preparing-your-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preparing-your-environment"}},[t._v("#")]),t._v(" Preparing your environment")]),t._v(" "),a("h3",{attrs:{id:"build-the-tokel-daemon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-the-tokel-daemon"}},[t._v("#")]),t._v(" Build the Tokel Daemon")]),t._v(" "),a("h4",{attrs:{id:"dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[t._v("#")]),t._v(" Dependencies")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#The following packages are needed:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" zlib1g-dev "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" bsdmainutils automake cmake clang ntp ntpdate "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" -y\n")])])]),a("h4",{attrs:{id:"linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[t._v("#")]),t._v(" Linux")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/TokelPlatform/tokel --branch tokel --single-branch\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" tokel\n./zcutil/fetch-params.sh\n./zcutil/build.sh -j"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("nproc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#This can take some time.")]),t._v("\n")])])]),a("h4",{attrs:{id:"osx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#osx"}},[t._v("#")]),t._v(" OSX")]),t._v(" "),a("p",[t._v("Ensure you have "),a("a",{attrs:{href:"https://brew.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("brew"),a("OutboundLink")],1),t._v(" and Command Line Tools installed.")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install brew")]),t._v("\n/usr/bin/ruby -e "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install Xcode, opens a pop-up window to install CLT without installing the entire Xcode package")]),t._v("\nxcode-select --install\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Update brew and install dependencies")]),t._v("\nbrew update\nbrew upgrade\nbrew tap discoteq/discoteq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" brew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" flock\nbrew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" autoconf autogen automake\nbrew update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" brew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc@8\nbrew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" binutils\nbrew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" protobuf\nbrew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" coreutils\nbrew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Clone the Tokel repo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/TokelPlatform/tokel --branch tokel --single-branch\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" tokel\n./zcutil/fetch-params.sh\n./zcutil/build-mac.sh -j"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("sysctl -n hw.ncpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This can take some time.")]),t._v("\n")])])]),a("h4",{attrs:{id:"windows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[t._v("#")]),t._v(" Windows")]),t._v(" "),a("p",[t._v("Use a debian cross-compilation setup with mingw for windows and run:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" zlib1g-dev "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" libcurl4-gnutls-dev bsdmainutils automake "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" cmake mingw-w64 libsodium-dev libevent-dev\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://sh.rustup.rs -sSf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.cargo/env\nrustup target "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" x86_64-pc-windows-gnu\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" update-alternatives --config x86_64-w64-mingw32-gcc\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (configure to use POSIX variant)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" update-alternatives --config x86_64-w64-mingw32-g++\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (configure to use POSIX variant)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/TokelPlatform/tokel --branch tokel --single-branch\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" tokel\n./zcutil/fetch-params.sh\n./zcutil/build-win.sh -j"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("nproc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#This can take some time.")]),t._v("\n")])])]),a("h2",{attrs:{id:"launch-the-tokel-blockchain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#launch-the-tokel-blockchain"}},[t._v("#")]),t._v(" Launch the Tokel blockchain")]),t._v(" "),a("p",[t._v("Change to the Tokel src directory:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd ~/tokel/src\n")])])]),a("p",[t._v("Launch the Tokel chain command:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./tokeld &\n")])])]),a("p",[t._v("The smart chain parameters are listed below if you are curious. The "),a("code",[t._v("tokeld")]),t._v(" command will launch the blockchain correctly without the need to use the full command below.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("komodod -ac_name=TOKEL -ac_supply=100000000 -ac_eras=2 -ac_cbmaturity=1 -ac_reward=100000000,4250000000 -ac_end=80640,0 -ac_decay=0,77700000 -ac_halving=0,525600 -ac_cc=555 -ac_ccenable=236,245,246,247 -ac_adaptivepow=6 -addnode=135.125.204.169 -addnode=192.99.71.125 -addnode=144.76.140.197 -addnode=135.181.92.123 &\n")])])]),a("p",[t._v("Now wait for the chain to finish syncing. This might take while depending on your machine and internet connection. You can check check sync progress by using tail -f on the debug.log file in the coin data directory. Double check the number of blocks you've downloaded with an explorer to verify you're up to the latest block.")]),t._v(" "),a("p",[a("strong",[t._v("LINUX")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("tail -f ~/.komodo/TOKEL/debug.log\n")])])]),a("p",[a("strong",[t._v("OSX")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("tail -f ~/Library/Application\\ Support/Komodo/TOKEL/debug.log\n")])])]),a("p",[t._v("Tokel uses CryptoConditions that require launching the blockchain with the "),a("code",[t._v("-pubkey")]),t._v(" parameter to work correctly. Once you have completed block download, you will need to create a new address or import your current address. After you have done that, you will need to stop the blockchain and launch it with the "),a("code",[t._v("-pubkey")]),t._v(" parameter.")]),t._v(" "),a("p",[t._v("You can use the RPC below to create a new address or import a privkey you currently have.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./tokel-cli getnewaddress\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./tokel-cli importprivkey\n")])])]),a("p",[t._v("Once you have completed this, use the "),a("code",[t._v("validateaddress")]),t._v(" RPC to find your associated pubkey.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./tokel-cli validateaddress *INSERTYOURADDRESSHERE*\n")])])]),a("p",[t._v("Once you have written down your pubkey, stop the Tokel blockchain.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd ~/tokel/src\n./tokel-cli stop\n")])])]),a("p",[t._v("Wait a minute or so for the blockchain to stop, then relaunch the Tokel blockchain with the command below. Please remove the ** and replace them with the pubkey of the address you imported.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd ~/tokel/src\n./tokeld -pubkey=**YOURPUBKEYHERE** &\n")])])]),a("p",[t._v("You are now ready to use the Tokel blockchain to its fullest extent.")]),t._v(" "),a("h2",{attrs:{id:"reset-tokel-blockchain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-tokel-blockchain"}},[t._v("#")]),t._v(" Reset Tokel blockchain")]),t._v(" "),a("p",[t._v("To reset the Tokel blockchain:")]),t._v(" "),a("ol",[a("li",[t._v("change into data directory")])]),t._v(" "),a("p",[a("strong",[t._v("Linux")]),t._v(" "),a("em",[t._v("~/.komodo/TOKEL")])]),t._v(" "),a("p",[a("strong",[t._v("OSX")]),t._v(" "),a("em",[t._v("~/Library/Application\\ Support/Komodo/TOKEL/")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Delete the corresponding files")])]),t._v(" "),a("p",[a("code",[t._v("rm -rf blocks chainstate debug.log komodostate db.log")])]),t._v(" "),a("h2",{attrs:{id:"tokel-blockchain-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tokel-blockchain-configuration"}},[t._v("#")]),t._v(" Tokel blockchain configuration")]),t._v(" "),a("p",[t._v("Tokel blockchain synced blocks and all other configuration is stored in either "),a("code",[t._v("~/.komodo/TOKEL/")]),t._v(" on Linux or "),a("code",[t._v("~/Library/Application\\ Support/Komodo/TOKEL/")]),t._v(" on OSX.")]),t._v(" "),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),a("p",[t._v('Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:')]),t._v(" "),a("p",[t._v("The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.")]),t._v(" "),a("p",[t._v('THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.')])])}),[],!1,null,null,null);e.default=n.exports}}]);